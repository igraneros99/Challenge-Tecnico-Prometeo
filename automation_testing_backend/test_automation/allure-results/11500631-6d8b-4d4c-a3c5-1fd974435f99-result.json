{"name": "test_co_account_validation[CO valid account]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200, got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "payload = {'account_number': '000000001', 'account_type': 'CHECKING', 'bank_code': '1007', 'country_code': 'CO', ...}, expected_status = 200, expected_response_body = {}\n\n    @allure.feature(\"CO Account Validation\")\n    @allure.story(\"Validate account with CO payloads\")\n    @pytest.mark.parametrize(\"payload, expected_status, expected_response_body\", test_cases)\n    def test_co_account_validation(payload, expected_status, expected_response_body):\n        with allure.step(\"Enviar solicitud POST con payload y headers definidos\"):\n            try:\n                response = requests.post(BASE_URL, data=payload, headers=HEADERS, timeout=10)\n            except requests.exceptions.Timeout:\n                pytest.fail(\"Request timed out after 10 seconds\")\n            except requests.exceptions.RequestException as e:\n                pytest.fail(f\"Request failed: {e}\")\n    \n        with allure.step(f\"Verificar código de estado esperado: {expected_status}\"):\n>           assert response.status_code == expected_status, f\"Expected {expected_status}, got {response.status_code}\"\nE           AssertionError: Expected 200, got 500\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntest_co.py:40: AssertionError"}, "steps": [{"name": "Enviar solicitud POST con payload y headers definidos", "status": "passed", "start": 1757975376126, "stop": 1757975376952}, {"name": "Verificar código de estado esperado: 200", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 200, got 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n", "trace": "  File \"/mnt/hdd/Prometeo Technical test/automation_testing_backend/test_automation/test_co.py\", line 40, in test_co_account_validation\n    assert response.status_code == expected_status, f\"Expected {expected_status}, got {response.status_code}\"\n"}, "start": 1757975376953, "stop": 1757975376953}], "parameters": [{"name": "payload", "value": "{'account_number': '000000001', 'country_code': 'CO', 'document_number': '123456789', 'document_type': 'CC', 'bank_code': '1007', 'account_type': 'CHECKING'}"}, {"name": "expected_status", "value": "200"}, {"name": "expected_response_body", "value": "{}"}], "start": 1757975376126, "stop": 1757975376953, "uuid": "117f44fe-e0a6-4eb2-b1c9-1959161f57d5", "historyId": "60c72a742678f8c428a98a2151776a87", "testCaseId": "c850c9a8e027cb751b493f624d6b54b7", "fullName": "test_co#test_co_account_validation", "labels": [{"name": "feature", "value": "CO Account Validation"}, {"name": "story", "value": "Validate account with CO payloads"}, {"name": "suite", "value": "test_co"}, {"name": "host", "value": "ignacio-GarudaI3"}, {"name": "thread", "value": "738529-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_co"}], "titlePath": ["test_co.py"]}